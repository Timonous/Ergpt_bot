import logging

from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import re

from bot.repository.staff_repository import get_is_employed_by_phone, get_staff_by_phone
from bot.repository.user_repository import get_user_info_by_tguser, get_active_users, update_users_is_active, \
    insert_new_user
from db import get_db_pool

router = Router()


def normalize_phone_number(raw_phone: str) -> str:
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
    digits = re.sub(r'\D', '', raw_phone)

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º 8xxxxxxxxxx ‚Üí +7xxxxxxxxxx
    if digits.startswith('8') and len(digits) == 11:
        return '+7' + digits[1:]
    elif digits.startswith('7') and len(digits) == 11:
        return '+7' + digits[1:]
    elif digits.startswith('9') and len(digits) == 10:
        return '+7' + digits
    elif digits.startswith('7') and len(digits) == 10:
        return '+7' + digits[1:]
    elif digits.startswith('89') and len(digits) == 11:
        return '+7' + digits[1:]
    elif digits.startswith('79') and len(digits) == 11:
        return '+7' + digits[1:]
    elif digits.startswith('7') and len(digits) == 11:
        return '+7' + digits[1:]
    elif digits.startswith('') and len(digits) == 10:
        return '+7' + digits
    else:
        return '+' + digits  # –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π

async def get_auth_user_by_telegramid(telegram_id: int):
    db_pool = get_db_pool()
    async with db_pool.acquire() as conn:
        user = await get_user_info_by_tguser(telegram_id)
        return user

async def daily_staff_status_check():
    """
    –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ –∫–æ–º–ø–∞–Ω–∏–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    db_pool = get_db_pool()
    async with db_pool.acquire() as conn:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = await get_active_users()

        for user in users:
            phone = user['phone']
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ staff
            staff = await get_is_employed_by_phone(phone)

            # –ï—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–≤–æ–ª–µ–Ω - –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º
            if not staff or not staff['is_employed']:
                await update_users_is_active(user)
                logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å c telegram_id:({user['telegram_id']}) –±—ã–ª –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")


async def check_staff_authorization(phone: str):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ staff –∏ —Å—Ç–∞—Ç—É—Å isemployed.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (True, staff_id) –ø—Ä–∏ —É—Å–ø–µ—Ö–µ –∏–ª–∏ (False, –ø—Ä–∏—á–∏–Ω–∞).
    """
    db_pool = get_db_pool()
    normalized_phone = normalize_phone_number(phone)
    async with db_pool.acquire() as conn:
        staff = await get_staff_by_phone(normalized_phone)
        if not staff:
            return False, "üò¥ –ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –≠–†-–¢–µ–ª–µ–∫–æ–º"
        if staff.get("is_employed") is False:
            return False, "üò¥ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –≠–†-–¢–µ–ª–µ–∫–æ–º"
        return True, staff.get("id")

async def authorize_user(message: Message) -> bool:
    auth_user = await get_auth_user_by_telegramid(message.chat.id)
    if auth_user is not None:
        if not auth_user.get("is_active"):
            await message.answer(
                f"üò¥ –ü–æ—Ö–æ–∂–µ –≤—ã –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –≠–†-–¢–µ–ª–µ–∫–æ–º.\n\n"
                "‚ùóÔ∏è –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É /support.",
                reply_markup=ReplyKeyboardRemove()
            )
            return False
        return True

    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)]],
        resize_keyboard=True
    )
    await message.answer(
    f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Ergpt bot.\n\n"
        "‚≠ê–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏üëá",
        reply_markup=keyboard
    )
    return False

async def group_authorize_user(message: Message) -> bool:
    auth_user = await get_auth_user_by_telegramid(message.from_user.id)
    if auth_user is not None:
        if not auth_user.get("is_active"):
            await message.answer(
                f"üò¥ –ü–æ—Ö–æ–∂–µ –≤—ã –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –≠–†-–¢–µ–ª–µ–∫–æ–º.\n\n"
                "‚ùóÔ∏è –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É /support."
            )
            return False
        return True
    await message.answer(
        f"üò¥ –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º.\n"
        "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π —á–∞—Ç —Å–æ –º–Ω–æ–π @Ergpt_test_bot"
    )
    return False

@router.message(F.contact)
async def handle_contact(message: Message):
    contact = message.contact
    phone = contact.phone_number

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ –Ω–æ–º–µ—Ä—É
    authorized, result = await check_staff_authorization(phone)

    if not authorized:
        await message.answer(result, reply_markup=ReplyKeyboardRemove())
        return

    staff_id = result

    if await get_auth_user_by_telegramid(message.chat.id) is None:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_pool = get_db_pool()
        async with db_pool.acquire() as conn:
            await insert_new_user(message, phone, staff_id)
        await message.answer(
            "‚úÖ –°–ø–∞—Å–∏–±–æ! –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.\n"
            "–ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã, –∏ —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –Ω–∞ –Ω–∏—Ö –æ—Ç–≤–µ—á—É!",
            reply_markup=ReplyKeyboardRemove()
        )
        return

    await message.answer(
        "–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ωüëå\n"
        "–ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã, –∏ —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –Ω–∞ –Ω–∏—Ö –æ—Ç–≤–µ—á—É!",
        reply_markup=ReplyKeyboardRemove()
    )
